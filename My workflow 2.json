{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {},
      "id": "4b34206d-2590-4f41-9155-f7e3282f2a63",
      "name": "Remove Duplicate URLs",
      "type": "n8n-nodes-base.removeDuplicates",
      "position": [
        1500,
        740
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d9dbf520-151e-4fa7-8989-a59d7749e261",
      "name": "Loop over queries",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1200,
        260
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "url": "=https://www.google.com/maps/search/{{ $json.query }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleApi",
        "options": {
          "allowUnauthorizedCerts": false
        }
      },
      "id": "6390d42e-5d06-4c16-b3d2-e4092ab515bb",
      "name": "Search Google Maps with query",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        900,
        740
      ],
      "executeOnce": false,
      "typeVersion": 4.2,
      "alwaysOutputData": false,
      "credentials": {
        "googleApi": {
          "id": "yeH6Q1LA0DevhSUO",
          "name": "Google Service Account account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const data = $input.first().json.data\n\nconst regex = /https?:\\/\\/[^\\/]+/g\n\nconst urls = data.match(regex)\n\nreturn urls.map(url => ({json: {url: url}}))"
      },
      "id": "f1d6dda5-6642-404b-b5fb-f29c0c25510b",
      "name": "Scrape URLs from results",
      "type": "n8n-nodes-base.code",
      "position": [
        1100,
        740
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "17480263-88e8-4a26-9b6d-ab27c775faa2",
              "operator": {
                "type": "string",
                "operation": "notRegex"
              },
              "leftValue": "={{ $json.url }}",
              "rightValue": "=(google|gstatic|ggpht|schema\\.org|example\\.com|sentry-next\\.wixpress\\.com|imli\\.com|sentry\\.wixpress\\.com|ingest\\.sentry\\.io)"
            },
            {
              "id": "7dd24909-6ee0-4a1a-96ba-3fe9dd39841c",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "d7709b90-e278-43fd-b9f7-4d11743e0953",
      "name": "Filter irrelevant URLs",
      "type": "n8n-nodes-base.filter",
      "position": [
        1300,
        740
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {}
      },
      "id": "59672478-34b2-4734-88b7-aec74ccdef53",
      "name": "Request web page for URL",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1900,
        820
      ],
      "typeVersion": 4.2,
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "id": "d5c3bbee-262c-4fac-8795-796e607e1108",
      "name": "Loop over URLs",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1700,
        740
      ],
      "typeVersion": 3,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "4f67c2c3-7894-4a17-b2cc-c52e21e8e144",
      "name": "Loop over pages",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1920,
        480
      ],
      "typeVersion": 3,
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $json.data\n\nconst emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.(?!png|jpg|gif|jpeg)[a-zA-Z]{2,}/g\n\nconst emails = data.match(emailRegex)\n\nreturn {json: {emails: emails}}"
      },
      "id": "12c91815-e410-4d11-97c1-2f7d759003c9",
      "name": "Scrape emails from page",
      "type": "n8n-nodes-base.code",
      "position": [
        2080,
        580
      ],
      "typeVersion": 2,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "emails"
            }
          ]
        },
        "options": {
          "mergeLists": true
        }
      },
      "id": "94f917b1-0e4c-4e0b-a53e-073ecd8fef9d",
      "name": "Aggregate arrays of emails",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        2240,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "fieldToSplitOut": "emails",
        "options": {}
      },
      "id": "9116cadb-ab34-406c-b384-bc96d7c32820",
      "name": "Split out into default data structure",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        2460,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "emails",
        "options": {}
      },
      "id": "adf066e5-2577-4965-b718-f7dc952f2829",
      "name": "Remove duplicate emails",
      "type": "n8n-nodes-base.removeDuplicates",
      "position": [
        2680,
        460
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "bcb10ab2-7975-444e-9c9d-e135e91c6a01",
              "operator": {
                "type": "string",
                "operation": "notRegex"
              },
              "leftValue": "={{ $json.emails }}",
              "rightValue": "=(google|gstatic|ggpht|schema\\.org|example\\.com|sentry\\.wixpress\\.com|sentry-next\\.wixpress\\.com|ingest\\.sentry\\.io|sentry\\.io|imli\\.com)"
            }
          ]
        },
        "options": {}
      },
      "id": "bf2f156a-9530-46af-84a6-c4e87f0faf5d",
      "name": "Filter irrelevant emails",
      "type": "n8n-nodes-base.filter",
      "position": [
        2880,
        460
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "operation": "create",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1pAp-dMoT_N5GDlGaLz4NcLgaE3-9td67wHrIn1N611U/edit?gid=0#gid=0",
          "mode": "url"
        },
        "options": {}
      },
      "id": "09687c86-6730-45d4-ad41-b6a4c1dff91b",
      "name": "Save emails to Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        3080,
        460
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "XQrsAQxgF2cxzGKD",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {},
      "id": "2c6775ef-c74b-4df4-a162-0b8b324e51f4",
      "name": "Starts scraper workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        680,
        740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "14f8b746-9fbf-432d-afc9-2b7893101eda",
      "name": "Run workflow",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        960,
        260
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "amount": 2
      },
      "id": "ede73249-9a3d-4936-be6a-26a7450240fa",
      "name": "Wait between executions",
      "type": "n8n-nodes-base.wait",
      "position": [
        1580,
        360
      ],
      "webhookId": "22718ab6-51bf-45b5-936f-886249ada909",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "mode": "each",
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "id": "118572d6-9f6f-4839-86fe-9aac5946fffa",
      "name": "Execute scraper for query",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        1400,
        360
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "content": "## 🛠 Setup\n1. Setup your list of queries in the \"Run workflow\" manual trigger node. Watch  this [video](https://youtu.be/HaiO-UeiKBA) on how to generate the queries with ChatGPT.\n3. Choose a sheet to populate with data in the **Google Sheets node**\n4. Run the workflow and start getting leads into your Google Sheets document",
        "height": 180,
        "width": 740,
        "color": 5
      },
      "id": "11d2209c-27ff-4c69-bd16-d4429e7ee8f4",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        220
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "**Optional** 👇\nSet wait time between each query workflow execution. Default is 2 seconds.",
        "height": 100,
        "color": 6
      },
      "id": "bfbac57b-f4e0-4387-9e6c-2c6a5d2e87a4",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1580,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Scraper 👇\nThis workflow will be executed in the background for each query. Click the **All executions** tab in the left sidebar to see the executions running.",
        "height": 100,
        "width": 480
      },
      "id": "e09e7751-bae3-45b2-b9d8-4f43d4a834f0",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        680,
        620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "👆 \n1. Setup your **credentials**. Here's a [video tutorial](https://youtu.be/O5RnWDM27M8) on how to do that.\n\n2. Choose which document and sheet to save the scraped emails to. ",
        "height": 180,
        "color": 4
      },
      "id": "953b594c-546d-4b73-9fcb-9ec1576b28c7",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3100,
        660
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": " ## ⚠️ Note\n\nA [video tutorial](https://youtu.be/HaiO-UeiKBA) for this workflow guide is available on my [Youtube channel](https://www.youtube.com/channel/UCn8xmUBunez1SsDVRfZDUGA)",
        "color": 3
      },
      "id": "760952e4-e9a4-4f36-b53c-b2acc22b2124",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        520,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Google Maps Automatic Email Scraper\n\nThis workflow automatically scrapes emails from businesses on Google Maps based on a list of queries that you provide.",
        "height": 140,
        "width": 480,
        "color": 7
      },
      "id": "7906792c-656f-48d4-9e5f-0fb66c529a5d",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "**Optional** 👆\nAdd or change the regex for filtering irrelevant URLs.",
        "height": 100,
        "width": 160,
        "color": 6
      },
      "id": "8ed6d5f6-2559-4d1e-a835-59c8a0c99d97",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1280,
        900
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "**Optional** 👆\nAdd or change the regex for filtering irrelevant/incorrect email addresses.",
        "height": 100,
        "width": 200,
        "color": 6
      },
      "id": "04098fa5-b592-4187-9e48-c2e3bfccab1c",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2860,
        620
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {
    "Run workflow": [
      {
        "json": {
          "query": "hollywood+dentist"
        }
      },
      {
        "json": {
          "query": "downtown+los+angeles+dentist"
        }
      },
      {
        "json": {
          "query": "santa+monica+dentist"
        }
      },
      {
        "json": {
          "query": "westwood+dentist"
        }
      },
      {
        "json": {
          "query": "west+l.a.+dentist"
        }
      },
      {
        "json": {
          "query": "the+valley+dentist"
        }
      },
      {
        "json": {
          "query": "echo+park+dentist"
        }
      },
      {
        "json": {
          "query": "culver+city+dentist"
        }
      },
      {
        "json": {
          "query": "pasadena+dentist"
        }
      },
      {
        "json": {
          "query": "silver+lake+dentist"
        }
      },
      {
        "json": {
          "query": "mid-wilshire+dentist"
        }
      },
      {
        "json": {
          "query": "beverly+hills+dentist"
        }
      },
      {
        "json": {
          "query": "north+hills+dentist"
        }
      },
      {
        "json": {
          "query": "south+los+angeles+dentist"
        }
      }
    ],
    "Starts scraper workflow": [
      {
        "json": {}
      }
    ]
  },
  "connections": {
    "Run workflow": {
      "main": [
        [
          {
            "node": "Loop over queries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop over URLs": {
      "main": [
        [
          {
            "node": "Loop over pages",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Request web page for URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop over pages": {
      "main": [
        [
          {
            "node": "Aggregate arrays of emails",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Scrape emails from page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop over queries": {
      "main": [
        [],
        [
          {
            "node": "Execute scraper for query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicate URLs": {
      "main": [
        [
          {
            "node": "Loop over URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter irrelevant URLs": {
      "main": [
        [
          {
            "node": "Remove Duplicate URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove duplicate emails": {
      "main": [
        [
          {
            "node": "Filter irrelevant emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape emails from page": {
      "main": [
        [
          {
            "node": "Loop over pages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Starts scraper workflow": {
      "main": [
        [
          {
            "node": "Search Google Maps with query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait between executions": {
      "main": [
        [
          {
            "node": "Loop over queries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter irrelevant emails": {
      "main": [
        [
          {
            "node": "Save emails to Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request web page for URL": {
      "main": [
        [
          {
            "node": "Loop over URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape URLs from results": {
      "main": [
        [
          {
            "node": "Filter irrelevant URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute scraper for query": {
      "main": [
        [
          {
            "node": "Wait between executions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate arrays of emails": {
      "main": [
        [
          {
            "node": "Split out into default data structure",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Google Maps with query": {
      "main": [
        [
          {
            "node": "Scrape URLs from results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split out into default data structure": {
      "main": [
        [
          {
            "node": "Remove duplicate emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3436430d-5609-4d75-acb4-2318c5bb907f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8a93b2a22ef51492ae8de7de42823c1244c9287c7d4cd90fe77908e3b4c26f5c"
  },
  "id": "pR2q8gDyAROdW0YF",
  "tags": []
}